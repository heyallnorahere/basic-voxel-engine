name: build
on: push
jobs:
  build:
    runs-on: ${{ matrix.os-name }}-latest
    strategy:
      matrix:
        os-name: [ windows, ubuntu, macos ]
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: sync ubuntu dependencies
        if: ${{ matrix.os-name == 'ubuntu' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg ca-certificates
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
          sudo apt-get update
          sudo apt-get install -y mesa-common-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev cmake mono-complete
      - name: install mono (windows)
        if: ${{ matrix.os-name == 'windows' }}
        shell: cmd
        run: |
          curl -L https://download.mono-project.com/archive/6.12.0/windows-installer/mono-6.12.0.107-x64-0.msi -o mono.msi
          msiexec /i mono.msi /quiet
      - name: install mono (macosx)
        if: ${{ matrix.os-name == 'macos' }}
        shell: bash
        run: |
          curl -L https://download.mono-project.com/archive/6.12.0/macos-10-universal/MonoFramework-MDK-6.12.0.122.macos10.xamarin.universal.pkg -o mono.pkg
          sudo installer -pkg mono.pkg -target /
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.x
      - name: install vulkan
        shell: bash
        run: |
          python scripts/setup_vulkan.py
      - name: build!
        shell: bash
        run: |
          cmake . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release -j 8