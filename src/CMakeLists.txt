cmake_minimum_required(VERSION 3.10)
file(GLOB_RECURSE CPP_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/lib/*.cpp")
file(GLOB_RECURSE H_HEADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/include/*.h")
set(MANIFEST ${CPP_SOURCE_FILES} ${H_HEADER_FILES})
set(BVE_TARGET_NAME basic-voxel-engine)
if(BVE_BUILD_EXECUTABLE)
    add_executable(${BVE_TARGET_NAME} ${MANIFEST} "${CMAKE_CURRENT_SOURCE_DIR}/main.cpp")
else()
    add_library(${BVE_TARGET_NAME} STATIC ${MANIFEST})
endif()
set_target_properties(${BVE_TARGET_NAME} PROPERTIES CXX_STANDARD 17)
target_include_directories(${BVE_TARGET_NAME} PUBLIC "${PROJECT_SOURCE_DIR}/vendor/glm" "${PROJECT_SOURCE_DIR}/vendor/stb" "${CMAKE_CURRENT_SOURCE_DIR}/include")
target_link_libraries(${BVE_TARGET_NAME} PUBLIC glfw glad spdlog EnTT imgui)
if(${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.16)
    target_precompile_headers(${BVE_TARGET_NAME} PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include/bve_pch.h")
endif()
if(WIN32)
    target_compile_definitions(${BVE_TARGET_NAME} PUBLIC BVE_PLATFORM_WINDOWS)
elseif(UNIX)
    target_compile_definitions(${BVE_TARGET_NAME} PUBLIC BVE_PLATFORM_UNIX)
endif()